{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","newNode","targetNode","parentNode","insertBefore","nextSibling","before","append","node","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","attr","attrName","val","arguments","length","setAttribute","getAttribute","text","str","console","log","html","style","name","key","class","add","className","classList","has","contains","on","ev","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodes","i","call","index","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  //增\r\n  create(string) {\r\n    const container = document.createElement(\"template\");\r\n    container.innerHTML = string.trim();\r\n    return container.content.firstChild;\r\n  },\r\n  after(newNode, targetNode) {\r\n    //把newNode插到targetNode后面\r\n    targetNode.parentNode.insertBefore(newNode, targetNode.nextSibling);\r\n    //nextSibling是返回当前节点紧跟着的节点\r\n  },\r\n  before(newNode, targetNode) {\r\n    targetNode.parentNode.insertBefore(newNode, targetNode);\r\n  },\r\n  append(node, parent) {\r\n    parent.appendChild(node);\r\n  },\r\n  wrap(node, parent) {\r\n    dom.before(parent, node);\r\n    dom.append(node, parent);\r\n    //DOM appendChild插入某个节点到其他地方，原来位置该节点会被删除\r\n  },\r\n  //删\r\n  remove(node) {\r\n    //删除node节点\r\n    node.parentNode.removeChild(node);\r\n    return node;\r\n    //return是为了删了这个节点还能保留这个节点的引用\r\n  },\r\n  empty(node) {\r\n    //删除node的后代\r\n    const { childNodes } = node, //???解构赋值\r\n      array = [];\r\n    let x = node.firstChild;\r\n    while (x) {\r\n      array.push(dom.remove(x));\r\n      x = node.firstChild;\r\n    }\r\n    //childNodes.length问题:节点分为元素节点（标签）和文本节点（纯文本），换行和空格实际上是文本节点,该length还会实时改变\r\n    return array;\r\n    //移除的文本节点也在返回的array里\r\n  },\r\n  //改\r\n  attr(node, attrName, val) {\r\n    //用于读写属性,通过arguments参数判断\r\n    if (arguments.length === 3) {\r\n      node.setAttribute(attrName, val);\r\n    } else if (arguments.length === 2) {\r\n      return node.getAttribute(attrName);\r\n    }\r\n  },\r\n  text(node, str) {\r\n    //用于读写文本内容\r\n    let x;\r\n    if (\"innerText\" in node) {\r\n      x = \"innerText\";\r\n    } else {\r\n      x = \"textContent\";\r\n    }\r\n    console.log(x);\r\n    if (arguments.length === 2) {\r\n      node[x] = str;\r\n    } else if (arguments.length === 1) {\r\n      return node[x];\r\n    }\r\n  },\r\n  html(node, str) {\r\n    //用于读写html内容\r\n    if (arguments.length === 2) {\r\n      node.innerHTML = str;\r\n    } else if (arguments.length === 1) {\r\n      return node.innerHTML;\r\n    }\r\n  },\r\n  style(node, name, val) {\r\n    //用于修改style\r\n    if (arguments.length === 3) {\r\n      //dom.style(div,'color','red')\r\n      node.style[name] = val;\r\n    } else if (arguments.length === 2) {\r\n      if (typeof name === \"string\") {\r\n        //dom.style(div,'color')\r\n        return node.style[name];\r\n      } else if (typeof name === \"object\") {\r\n        //dom.style(div,{color:'red'})\r\n        for (let key in name) {\r\n          node.style[key] = name[key];\r\n        }\r\n      }\r\n    }\r\n  },\r\n  class: {\r\n    add(node, className) {\r\n      node.classList.add(className);\r\n    },\r\n    remove(node, className) {\r\n      node.classList.remove(className);\r\n    },\r\n    has(node, className) {\r\n      return node.classList.contains(className);\r\n    }\r\n  },\r\n  on(node, ev, fn) {\r\n    //添加事件监听\r\n    node.addEventListener(ev, fn);\r\n  },\r\n  off(node, ev, fn) {\r\n    //删除事件监听\r\n    node.removeEventListener(ev, fn);\r\n  },\r\n  //查\r\n  find(selector, scope) {\r\n    //获取标签\r\n    return (scope || document).querySelectorAll(selector);\r\n  },\r\n  parent(node) {\r\n    //获取父元素\r\n    return node.parentNode;\r\n  },\r\n  children(node) {\r\n    //获取子元素\r\n    return node.children;\r\n    //childNodes包含文本节点元素节点,children只包含元素节点(ie里还包含注释节点)\r\n  },\r\n  siblings(node) {\r\n    //获取兄弟元素\r\n    return Array.from(node.parentNode.children).filter(n => n !== node);\r\n    //node.parentNode.children是伪数组\r\n  },\r\n  next(node) {\r\n    //获取弟弟\r\n    let x = node.nextSibling;\r\n    while (x && x.nodeType === 3) {\r\n      //3文本节点,8注释节点,1元素节点,2属性节点\r\n      x = x.nextSibling;\r\n    }\r\n    return x;\r\n  },\r\n  previous(node) {\r\n    //获取老哥\r\n    let x = node.previousSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.previousSibling;\r\n    }\r\n    return x;\r\n  },\r\n  each(nodes, fn) {\r\n    //遍历所有节点\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      fn.call(null, nodes[i]);\r\n    }\r\n  },\r\n  index(node) {\r\n    //获取索引号(从0开始)\r\n    const list = dom.children(node.parentNode);\r\n    let i;\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i] === node) {\r\n        break;\r\n      }\r\n    }\r\n    return i;\r\n  }\r\n};\r\n"]}